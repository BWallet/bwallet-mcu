!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
NAME	Makefile	/^NAME  = demo$/;"	m
__stack_chk_fail	demo.c	/^void __attribute__((noreturn)) __stack_chk_fail(void)$/;"	f
__stack_chk_guard	demo.c	/^uint32_t __stack_chk_guard;$/;"	v
bReportDescriptorType	demo.c	/^		uint8_t bReportDescriptorType;$/;"	m	struct:__anon1::__anon2	file:
config	demo.c	/^static const struct usb_config_descriptor config = {$/;"	v	typeref:struct:usb_config_descriptor	file:
dev_descr	demo.c	/^static const struct usb_device_descriptor dev_descr = {$/;"	v	typeref:struct:usb_device_descriptor	file:
frame	demo.c	/^int frame = 0;$/;"	v
hid_control_request	demo.c	/^static int hid_control_request(usbd_device *dev, struct usb_setup_data *req, uint8_t **buf, uint16_t *len,$/;"	f	file:
hid_descriptor	demo.c	/^	struct usb_hid_descriptor hid_descriptor;$/;"	m	struct:__anon1	typeref:struct:__anon1::usb_hid_descriptor	file:
hid_endpoints	demo.c	/^static const struct usb_endpoint_descriptor hid_endpoints[2] = {{$/;"	v	typeref:struct:usb_endpoint_descriptor	file:
hid_function	demo.c	/^} __attribute__((packed)) hid_function = {$/;"	v	typeref:struct:__anon1	file:
hid_iface	demo.c	/^static const struct usb_interface_descriptor hid_iface[] = {{$/;"	v	typeref:struct:usb_interface_descriptor	file:
hid_report	demo.c	/^	} __attribute__((packed)) hid_report;$/;"	m	struct:__anon1	typeref:struct:__anon1::__anon2	file:
hid_report_descriptor	demo.c	/^static const uint8_t hid_report_descriptor[] = {$/;"	v	file:
hid_rx_callback	demo.c	/^static void hid_rx_callback(usbd_device *dev, uint8_t ep)$/;"	f	file:
hid_set_config	demo.c	/^static void hid_set_config(usbd_device *dev, uint16_t wValue)$/;"	f	file:
ifaces	demo.c	/^static const struct usb_interface ifaces[] = {{$/;"	v	typeref:struct:usb_interface	file:
main	demo.c	/^int main(void)$/;"	f
pass	demo.c	/^uint8_t *pass = (uint8_t *)"meadow";$/;"	v
passlen	demo.c	/^uint32_t passlen;$/;"	v
salt	demo.c	/^uint8_t *salt = (uint8_t *)"BWallet";$/;"	v
saltlen	demo.c	/^uint32_t saltlen;$/;"	v
seed	demo.c	/^uint8_t seed[128];$/;"	v
state	demo.c	/^int state = 0;$/;"	v
states	demo.c	/^const int states = 2;$/;"	v
usbInit	demo.c	/^void usbInit(void)$/;"	f
usb_strings	demo.c	/^static const char *usb_strings[] = {$/;"	v	file:
usbd_control_buffer	demo.c	/^static uint8_t usbd_control_buffer[128];$/;"	v	file:
usbd_dev	demo.c	/^static usbd_device *usbd_dev;$/;"	v	file:
wDescriptorLength	demo.c	/^		uint16_t wDescriptorLength;$/;"	m	struct:__anon1::__anon2	file:
